version: '4.32.0'

services:
  app:
    build: .
    ports:
      - 8080:8080
    networks:
      - network-1
    env_file:
      - pr_doc.env
    depends_on:
      - db
  db:
    image: postgres:16.2
    volumes:
      - db-test:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - network-1
    environment:
      POSTGRES_USER: doc
      POSTGRES_PASSWORD: doc
      POSTGRES_DB: learning-system
  zookeeper:
    image: bitnami/zookeeper:3.9.2
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      - network-1
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
  kafka:
    image: bitnami/kafka:3.3.2
    container_name: kafka
    ports:
      - 9094:9094
    networks:
      - network-1
    volumes:
      - "kafka_data:/bitnami"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 18080:8080
    networks:
      - network-1
    depends_on:
      - kafka
      - zookeeper
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
networks:
  network-1:
    name: network-1
volumes:
  db-test:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local